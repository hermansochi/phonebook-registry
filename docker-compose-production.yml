version: '3.7'
services:
    nginx:
        image: nginx:alpine
        networks:
            - traefik-public
        volumes:
            - ./docker/production/nginx/conf.d:/etc/nginx/conf.d:ro
            - ./htpasswd:/etc/nginx/auth/htpasswd:ro
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.hub.rule=Host(`hub.herman.team`)
                - traefik.http.routers.hub.entrypoints=https
                - traefik.http.routers.hub.service=hub
                - traefik.http.services.hub.loadbalancer.server.port=80
                - traefik.http.routers.hub.tls=true
                - traefik.http.routers.hub.tls.certResolver=letsEncrypt

                - traefik.http.routers.cache-hub.rule=Host(`cache-hub.herman.team`)
                - traefik.http.routers.cache-hub.entrypoints=https
                - traefik.http.routers.cache-hub.service=cache-hub
                - traefik.http.services.cache-hub.loadbalancer.server.port=80
                - traefik.http.routers.cache-hub.tls=true
                - traefik.http.routers.cache-hub.tls.certResolver=letsEncrypt
            placement:
                    constraints: [node.role == manager]

    registry:
        image: registry:2
        environment:
            - REGISTRY_STORAGE_DELETE_ENABLED=true
        volumes:
            - registry:/var/lib/registry
        networks:
            - traefik-public
        deploy:
            placement:
                constraints: [node.role == manager]

    cache-registry:
        image: registry:2
        environment:
            REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
            REGISTRY_STORAGE_DELETE_ENABLED: 1
        volumes:
            - cache-registry:/var/lib/registry
        networks:
            - traefik-public

volumes:
    registry:
    cache-registry:
    traefik-public-certs:

networks:
    traefik-public:
        external: true
